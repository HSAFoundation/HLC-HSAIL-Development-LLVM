//===-- HSAILInstPrinter.h - HSAIL MC Inst -> ASM interface -----*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
/// \file
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_HSAIL_INSTPRINTER_HSAILINSTPRINTER_H
#define LLVM_LIB_TARGET_HSAIL_INSTPRINTER_HSAILINSTPRINTER_H

#include "llvm/ADT/StringRef.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class HSAILInstPrinter : public MCInstPrinter {
public:
  HSAILInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI);

  // Autogenerated by tblgen
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot) override;

private:
//  void printU8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printU16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printS8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printS16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printB1(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printB8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printB16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printB32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printB64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printB128(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printSAMP(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printROIMG(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printWOIMG(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printRWIMG(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printSIG32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printSIG64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU8X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU8X8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printU8X16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU16X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU16X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  //void printU16X8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printU32X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printU32X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printU64X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS8X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS8X8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printS8X16(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS16X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS16X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printS16X8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printS32X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printS32X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  //void printS64X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF16X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF16X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printF16X8(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printF32X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printF32X4(const MCInst *MI, unsigned OpNo, raw_ostream &O);
//  void printF64X2(const MCInst *MI, unsigned OpNo, raw_ostream &O);


  void printUImmediate(uint64_t Imm, raw_ostream &O);
  void printSImmediate(int64_t Imm, raw_ostream &O);
  void printAddrMode3Op(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printVec2Op(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printVec3Op(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printVec4Op(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printV2U32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV2F32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV2U64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV2F64(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printV3U32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV3F32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV3U64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV3F64(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printV4U32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV4F32(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV4U64(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV4F64(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printFTZ(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printNoNull(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printV4(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigAlignment(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printArgDeclAlignment(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printArraySize(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printEquiv(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigAllocation(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigAluModifierMask(const MCInst *MI, unsigned OpNo,
                                raw_ostream &O);
  void printBrigAtomicOperation(const MCInst *MI, unsigned OpNo,
                                raw_ostream &O);
  void printBrigCompareOperation(const MCInst *MI, unsigned OpNo,
                                 raw_ostream &O);
  void printBrigControlDirective(const MCInst *MI, unsigned OpNo,
                                 raw_ostream &O);

  void printBrigExecutableModifierMask(const MCInst *MI, unsigned OpNo,
                                       raw_ostream &O);
  void printBrigImageChannelOrder(const MCInst *MI, unsigned OpNo,
                                  raw_ostream &O);
  void printBrigImageChannelType(const MCInst *MI, unsigned OpNo,
                                 raw_ostream &O);
  void printBrigImageGeometry(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigImageQuery(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigLinkage(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigMachineModel(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigMemoryModifierMask(const MCInst *MI, unsigned OpNo,
                                   raw_ostream &O);
  void printBrigMemoryOrder(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigMemoryScope(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigPack(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigProfile(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printBrigRound(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigSamplerAddressing(const MCInst *MI, unsigned OpNo,
                                  raw_ostream &O);
  void printBrigSamplerCoordNormalization(const MCInst *MI, unsigned OpNo,
                                          raw_ostream &O);

  void printBrigSamplerFilter(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigSamplerQuery(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigSegCvtModifierMask(const MCInst *MI, unsigned OpNo,
                                   raw_ostream &O);

  void printBrigSegment(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigType(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printBrigVariableModifierMask(const MCInst *MI, unsigned OpNo,
                                     raw_ostream &O);

  void printBrigWidth(const MCInst *MI, unsigned OpNo, raw_ostream &O);
};

} // End namespace llvm

#endif
